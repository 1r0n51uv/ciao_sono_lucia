variables:
  NPM_TOKEN: ${CI_JOB_TOKEN}

stages:
  - caching
  - verify
  - test
  - build
  - deploy

caching:
  image: node:22-bullseye-slim
  stage: caching
  before_script:
    # update environment
    - apt update
    - npm i -g typescript
  script:
    # install dependencies
    - yarn
  cache: &global_cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: push

verify:
  image: node:22-bullseye-slim
  stage: verify
  needs: [caching]
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  before_script:
    - npm i -g prettier@3.5.3
    - npm i -g typescript
  script:
    # run prettier and lint
    - prettier -c .
    - yarn lint

vitest:
  image: node:22-bullseye-slim
  stage: test
  needs: [caching, verify]
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull-push
    paths:
      - coverage/
      - node_modules/
  script:
    # run test with coverage
    - yarn vitest run --coverage
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura # or jacoco
        path: coverage/vitest/clover.xml

cypress:
  image: cypress/browsers:22.12.0
  stage: test
  needs: [caching, verify]
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull-push
    paths:
      - node_modules/
  script:
    # install cypress binary
    - yarn cypress install

    # start the server in the background
    #    - npm start &
    # run Cypress tests e2e
    # - npx cypress run --browser firefox
    # run Cypress tests e2e
    - npx cypress run --component --browser firefox
  artifacts:
    when: on_failure
    paths:
      - cypress/videos/**/*.mp4
      - cypress/screenshots/**/*.png
    expire_in: 1 day

#coverage:
#  image: node:22-bullseye-slim
#  stage: test
#  needs: [caching, verify, cypress]
#  cache:
#    # inherit all global cache settings
#    <<: *global_cache
#    # override the policy
#    policy: pull
#  script:
#    # run prettier and lint
#    - chmod +x gitlab-ci.coverage.sh
#    - ./gitlab-ci.coverage.sh
#  artifacts:
#    reports:
#      coverage_report:
#        coverage_format: cobertura # or jacoco
#        path: coverage/cy-coverage/clover.xml

build:
  image: node:22-bullseye-slim
  stage: build
  needs: [caching, verify, cypress]
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull-push
    paths:
      - dist/
      - node_modules/
  before_script:
    - npm i -g typescript
  script:
    # compile typescript and build lib
    - tsc --noEmit
    - yarn build

deploy:
  image: docker:20.10.16
  stage: deploy
  needs: [caching, verify, cypress, build]
  services:
    - docker:20.10.16-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  cache:
    # inherit all global cache settings
    <<: *global_cache
    # override the policy
    policy: pull
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  only:
    - tags
  except:
    - branches
